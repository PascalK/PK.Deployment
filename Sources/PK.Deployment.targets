<!--
***********************************************************************************************
PK.Deployment.targets  

This file adds and simplifies functionality for deploying applications using MsDeploy (WebDeploy)

Author: Pascal Klarenbeek
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--Definitions-->
  <ItemDefinitionGroup>
    <MsDeployAdditionalManifestFiles>
    </MsDeployAdditionalManifestFiles>
  </ItemDefinitionGroup>
  
  <!--Add the MsDeployAdditionalManifestFiles build action to the drop down list in Visual Studio so it can be selected without editing project files in a text editor-->
  <ItemGroup>
    <AvailableItemName Include="MsDeployAdditionalManifestFiles" />
    <AvailableItemName Include="ParametersXMLFiles" />
  </ItemGroup>
  <!--End Definitions-->

  <!--Hooks-->
  <!--Hook in CopyAdditionalManifestFiles after the package is created-->
  <PropertyGroup>
    <OnAfterPackageUsingManifest>
      $(OnAfterPackageUsingManifest);
      MsDeployCopyAdditionalManifestFiles;
    </OnAfterPackageUsingManifest>
  </PropertyGroup>
  <!--End hooks-->
    
  <!--*********************************************************************-->
  <!-- MsDeployCopyAdditionalManifestFiles                                 -->
  <!-- ********************************************************************-->
  <PropertyGroup>
    <MsDeployCopyAdditionalManifestFilesDependsOn>
      $(MsDeployCopyAdditionalManifestFilesDependsOn);
    </MsDeployCopyAdditionalManifestFilesDependsOn>
    <OnAfterMsDeployCopyAdditionalManifestFiles>
      $(OnAfterMsDeployCopyAdditionalManifestFiles);
    </OnAfterMsDeployCopyAdditionalManifestFiles>
  </PropertyGroup>
  <Target Name="MsDeployCopyAdditionalManifestFiles" Condition="'@(MsDeployAdditionalManifestFiles)'!=''" DependsOnTargets="$(MsDeployCopyAdditionalManifestFilesDependsOn)">
    <Copy Condition="!$(PackageAsSingleFile)"
          SourceFiles="@(MsDeployAdditionalmanifestFiles)" 
          DestinationFolder="$(PackageArchiveRootDir)" />
    <ItemGroup>
      <_PackageFileLocation Include="$(PackageFileName)" />
    </ItemGroup>
    <Copy Condition="$(PackageAsSingleFile)" 
          SourceFiles="@(MsDeployAdditionalmanifestFiles)" 
          DestinationFolder="@(_PackageFileLocation->'%(RootDir)%(Directory)')" />
    <ItemGroup>
      <FileWrites Include="@(MsDeployAdditionalManifestFiles)" />
    </ItemGroup>
    <CallTarget Targets="$(OnAfterMsDeployCopyAdditionalManifestFiles)" RunEachTargetSeparately="False" />
  </Target>

  <!--****************************************************************************************-->
  <!-- AddReplaceToUpdatePackagePath                                                          -->
  <!-- Original solution by: Sayed Ibrahim Hashimi - Web packaging fixing the long path issue -->
  <!-- http://sedodream.com/2013/01/13/WebPackagingFixingTheLongPathIssue.aspx                -->
  <!--****************************************************************************************-->
  <PropertyGroup>
    <PackagePath Condition=" '$(PackagePath)'=='' ">website</PackagePath>
    <EnableAddReplaceToUpdatePackagePath Condition=" '$(EnableAddReplaceToUpdatePackagePath)'=='' ">true</EnableAddReplaceToUpdatePackagePath>
  </PropertyGroup>
  <Target Name="AddReplaceRuleForAppPath" Condition=" '$(EnableAddReplaceToUpdatePackagePath)'=='true' " BeforeTargets="Package">
    <PropertyGroup>
      <_PkgPathFull>$([System.IO.Path]::GetFullPath($(WPPAllFilesInSingleFolder)))</_PkgPathFull>
    </PropertyGroup>
    <!-- Escape the text into a regex -->
    <EscapeTextForRegularExpressions Text="$(_PkgPathFull)">
      <Output TaskParameter="Result" PropertyName="_PkgPathRegex" />
    </EscapeTextForRegularExpressions>
    <!-- Add the replace rule to update the path -->
    <ItemGroup>
      <MsDeployReplaceRules Include="replaceFullPath">
        <Match>$(_PkgPathRegex)</Match>
        <Replace>$(PackagePath)</Replace>
      </MsDeployReplaceRules>
    </ItemGroup>
  </Target>
</Project>